{"ast":null,"code":"var _jsxFileName = \"/home/dell/MyHostel/Frontend/src/HomeComponent/DocumentUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../CSS/DocumentUpload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentUpload = ({\n  handleClose\n}) => {\n  _s();\n  const [documents, setDocuments] = useState([]);\n  const handleUpload = event => {\n    const files = event.target.files;\n    const uploadedDocuments = Array.from(files);\n    setDocuments([...documents, ...uploadedDocuments]);\n  };\n  const handleRemove = index => {\n    const updatedDocuments = [...documents];\n    updatedDocuments.splice(index, 1);\n    setDocuments(updatedDocuments);\n  };\n  const handleUploadAll = () => {\n    if (documents.length === 0) {\n      toast.error(\"Select the files!\");\n      return;\n    }\n\n    // Simulate uploading all files\n    // In a real application, you would send these files to your server\n    // and handle the upload process there\n    console.log(\"Uploading all files:\", documents);\n    toast.success(\"Files uploaded successfully!\");\n    setDocuments([]);\n  };\n  const handleCloseClick = () => {\n    handleClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"document-upload-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Document Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleUpload,\n        multiple: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"uploaded-documents\",\n        children: [documents.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-file-chosen\",\n          children: \"No file chosen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), documents.map((document, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"document\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: document.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemove(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUploadAll,\n          className: \"upload-button\",\n          children: \"Upload All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCloseClick,\n          className: \"close-button\",\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentUpload, \"qg9gKeTC6zKg8lu5CbNMJA40rsw=\");\n_c = DocumentUpload;\nexport default DocumentUpload;\nvar _c;\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","toast","jsxDEV","_jsxDEV","DocumentUpload","handleClose","_s","documents","setDocuments","handleUpload","event","files","target","uploadedDocuments","Array","from","handleRemove","index","updatedDocuments","splice","handleUploadAll","length","error","console","log","success","handleCloseClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","multiple","map","document","name","onClick","_c","$RefreshReg$"],"sources":["/home/dell/MyHostel/Frontend/src/HomeComponent/DocumentUpload.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../CSS/DocumentUpload.css';\n\nconst DocumentUpload = ({ handleClose }) => {\n  const [documents, setDocuments] = useState([]);\n\n  const handleUpload = (event) => {\n    const files = event.target.files;\n    const uploadedDocuments = Array.from(files);\n    setDocuments([...documents, ...uploadedDocuments]);\n  };\n\n  const handleRemove = (index) => {\n    const updatedDocuments = [...documents];\n    updatedDocuments.splice(index, 1);\n    setDocuments(updatedDocuments);\n  };\n\n  const handleUploadAll = () => {\n    if (documents.length === 0) {\n      toast.error(\"Select the files!\");\n      return;\n    }\n    \n    // Simulate uploading all files\n    // In a real application, you would send these files to your server\n    // and handle the upload process there\n    console.log(\"Uploading all files:\", documents);\n\n    \n    toast.success(\"Files uploaded successfully!\");\n\n   \n    setDocuments([]);\n  };\n\n  const handleCloseClick = () => {\n    handleClose();\n  };\n\n  return (\n    <div className=\"document-upload-modal\">\n      <div className=\"overlay-content\">\n        <h2>Document Upload</h2>\n        <input type=\"file\" onChange={handleUpload} multiple />\n        <div className=\"uploaded-documents\">\n          {documents.length === 0 && (\n            <div className=\"no-file-chosen\">No file chosen</div>\n          )}\n          {documents.map((document, index) => (\n            <div key={index} className=\"document\">\n              <span>{document.name}</span>\n              <button onClick={() => handleRemove(index)}>Remove</button>\n            </div>\n          ))}\n        </div>\n        <div className=\"button-container\">\n          <button onClick={handleUploadAll} className=\"upload-button\">Upload All</button>\n          <button onClick={handleCloseClick} className=\"close-button\">Close</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentUpload;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}